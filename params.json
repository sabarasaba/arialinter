{"name":"Arialinter","tagline":"Rule based accessibility linter for HTML documents","body":"[ArialLinter](http://arialinter.aws.af.cm/) [![Build Status](https://api.travis-ci.org/globant-ui/arialinter.png?branch=master)](http://travis-ci.org/globant-ui/arialinter)\r\n============\r\nArialLinter goal is twofold:\r\n* provide a simple accessibility linter for HTML documents\r\n* provide a Grunt task based on the linter in order to integrate accesibility best practices \r\nright into the developer workflow\r\n\r\n## Demo\r\n\r\nThe demo is currently deployed in http://arialinter.aws.af.cm/.\r\n\r\n\r\n## Getting Started\r\n\r\n### Grunt task\r\n\r\nThis plugin requires Grunt `~0.4.0`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\n$ npm install grunt-arialinter --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it can be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-arialinter');\r\n```\r\n\r\nAfterwards, files, markup, and url's can be linted:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  arialinter: {\r\n    files: [\r\n      'https://www.google.com/',\r\n      './templates/*.html',\r\n      '<!doctype html><html lang=\"en\"><head><title>titulo test</title></head><body style=\"background-color: white;\"> <h1 style=\"color: black;\">hola</h1><img src=\"asdf.jpg\" alt=\"woop\" /> <div class=\"entry\"> <p>{{title}}</p> <h2>By {{author.name}}</h2> <div class=\"body\">{{body}}</div></div> </body> </html>'\r\n    ],\r\n    options: {\r\n      templates: true,\r\n      levels: 'A'\r\n    }\r\n  }\r\n});\r\n\r\ngrunt.registerTask('default', ['arialinter']);\r\n```\r\n\r\nOptions:\r\n* templates: if templates is **true** then a subset of the rules will be run. This subset comprises those rules \r\nthat can be checked against a static HTML template. Rules that require checking the correct event-handlers or any other \r\ndynamic condition wont be run. By contrast, if templates is **false** then all rules will be run\r\n* levels: indicates which rules will be run according to the level they belong to. If you dont specify any level, it'' run for all the levels.\r\n\r\n### Nodejs\r\n\r\nYou can also use it with nodejs like a regular library\r\n\r\nInstall the package from npm\r\n\r\n```shell\r\n$ npm install arialinter --save-dev\r\n```\r\n\r\nThen, using arialinter, is as easy as:\r\n\r\n```javascript\r\nvar ArialLinter = require('arialinter');\r\nvar linter = new ArialLinter();\r\n\r\nlinter.initialize(fileOrUrl, function() {\r\n  if (linter.evaluate()){\r\n    console.log('success');\r\n  } else {\r\n    console.log('failed');\r\n  }\r\n});\r\n```\r\n\r\nYou can also pass an options argument to the evaluate() method:\r\n\r\n```javascript\r\nvar ArialLinter = require('arialinter');\r\nvar linter = new ArialLinter();\r\n\r\nlinter.initialize(fileOrUrl, function() {\r\n  if (linter.evaluate({level: 'A', template: true})){\r\n    console.log('success');\r\n  } else {\r\n    console.log('failed');\r\n  }\r\n});\r\n```\r\n\r\n### CLI\r\n\r\nTo run arialinter from the command line:\r\n\r\n```shell\r\n$ npm install -g arialinter\r\n```\r\n\r\nDisplay all the rules\r\n\r\n```javascript\r\n$ arialinter --rules\r\n```\r\n\r\nExecute the linter just for templates\r\n\r\n```javascript\r\n$ arialinter --templates test/testFiles/template.html\r\n```\r\n\r\nExecute the linter using all the rules of the level A\r\n\r\n```javascript\r\n$ arialinter --level A  test/testFiles/index.html\r\n```\r\n\r\nExecute the linter using all the rules of the level A and the rules that just apply for templates\r\n\r\n```javascript\r\n$ arialinter --level A --templates test/testFiles/index.html\r\n```\r\n\r\n\r\n##Resources:\r\n* Accessibility\r\n * WAI-ARIA Authoring Practices: http://www.w3.org/TR/wai-aria-practices/\r\n * http://www.w3.org/TR/WCAG20-TECHS/html.html\r\n * http://dev.w3.org/html5/alt-techniques/\r\n * https://dvcs.w3.org/hg/aria-unofficial/raw-file/tip/index.html\r\n * http://www.openajax.org/member/wiki/Accessibility_-_WCAG20_Validation_Rules\r\n\r\n\r\n##License\r\n\r\nCopyright (c) 2013 Globant UI Developers\r\n\r\nLicensed under the MIT license.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}